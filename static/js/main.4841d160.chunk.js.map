{"version":3,"sources":["components/Character/index.js","components/Title/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["CharacterCard","props","className","onClick","clickedImage","id","alt","name","src","image","Title","score","topScore","Wrapper","children","shuffleImage","array","i","length","j","Math","floor","random","temp","App","state","characters","clickedCharacters","indexOf","push","handleIncrement","characterShuffle","alert","setState","this","message","class","map","character","Character","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+gCAYeA,G,MATO,SAAAC,GAAK,OACvB,qBAAKC,UAAU,gBAAgBC,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,KAAvE,SACI,qBAAKH,UAAU,gBAAf,SACI,qBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,c,MCI9BC,MAPf,SAAeT,GACX,OAAO,sBAAKC,UAAU,QAAf,cAAwB,6BAAI,uEACnC,kGACA,6BAAI,6CAAgBD,EAAMU,MAAtB,iBAA2CV,EAAMW,kBCD1CC,G,MAFC,SAAAZ,GAAK,OAAI,qBAAKC,UAAU,UAAf,SAA0BD,EAAMa,a,OCGzD,SAASC,EAAaC,GACpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAE,IAClCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,E,IA2EMQ,E,4MAtEbC,MAAQ,CACNC,aACAf,MAAO,EACPC,SAAU,EACVe,kBAAmB,I,EAGrBvB,aAAe,SAAAC,GACb,IAAIsB,EAAoB,EAAKF,MAAME,kBAC/BhB,EAAQ,EAAKc,MAAMd,MACnBC,EAAW,EAAKa,MAAMb,UAEa,IAAnCe,EAAkBC,QAAQvB,IAC5BsB,EAAkBE,KAAKxB,GACvB,EAAKyB,kBACL,EAAKC,oBACyB,KAArB,EAAKN,MAAMd,OACpBqB,MAAM,6BACN,EAAKC,SAAS,CACZtB,MAAO,EACPgB,kBAAmB,OAGrB,EAAKM,SAAS,CACZtB,MAAO,EACPgB,kBAAmB,KAErBK,MAAM,gDAGJrB,EAAQC,IACVA,EAAWD,EACX,EAAKsB,SAAS,CAAErB,e,EAIpBkB,gBAAkB,WAChB,EAAKG,SAAS,CAAEtB,MAAO,EAAKc,MAAMd,MAAQ,K,EAG5CoB,iBAAmB,WACjB,EAAKE,SAAS,CAAEP,WAAYX,EAAaW,M,uDAIjC,IAAD,OACP,OACE,eAAC,EAAD,WACG,cAAC,EAAD,CACGf,MAAOuB,KAAKT,MAAMd,MAClBwB,QAASD,KAAKT,MAAMU,QACpBvB,SAAUsB,KAAKT,MAAMb,WACzB,qBAAKwB,MAAM,YAAX,SACE,qBAAKA,MAAM,MAAX,SACGF,KAAKT,MAAMC,WAAWW,KAAI,SAAAC,GAAS,OAClC,cAACC,EAAD,CACElC,GAAIiC,EAAUjC,GAEdE,KAAM+B,EAAU/B,KAChBE,MAAO6B,EAAU7B,MACjBL,aAAc,EAAKA,cAHdkC,EAAUjC,kB,GA1DbmC,aCZlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4841d160.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst CharacterCard = props => (\n    <div className=\"card col-md-3\" onClick={() => props.clickedImage(props.id)}>\n        <div className=\"img-container\">\n            <img alt={props.name} src={props.image} />\n        </div>\n    </div>\n)\n\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n    return <div className=\"title\"> <h1><strong>Fairly Odd Parents Clicky Game!</strong></h1>\n    <h3>Click on a character but make sure you don't click on one twice!</h3>\n    <h4><strong>Score: {props.score} | Top Score: {props.topScore}</strong></h4>\n    </div>\n}\n\nexport default Title;","import React from \"react\";\nimport \"./style.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>\n\nexport default Wrapper;","import React, { Component } from 'react';\nimport CharacterCard from \"./components/Character\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\n\nfunction shuffleImage(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i+1));\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp\n  }\n  return array\n};\n\n\nclass App extends Component {\n  state = {\n    characters,\n    score: 0,\n    topScore: 0,\n    clickedCharacters: []\n  };\n\n  clickedImage = id => {\n    let clickedCharacters = this.state.clickedCharacters;\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n\n    if (clickedCharacters.indexOf(id) === -1) {\n      clickedCharacters.push(id);\n      this.handleIncrement();\n      this.characterShuffle();\n    } else if (this.state.score === 12) {\n      alert(\"Grab your wands! You win!\")\n      this.setState({\n        score: 0,\n        clickedCharacters: []\n      });\n    } else {\n      this.setState({\n        score: 0,\n        clickedCharacters: []\n      });\n      alert(\"Uh oh! You picked the same character twice!\")\n    }\n\n    if (score > topScore) {\n      topScore = score;\n      this.setState({ topScore })\n    }\n  };\n\n  handleIncrement = () => {\n    this.setState({ score: this.state.score + 1 });\n  }\n\n  characterShuffle = () => {\n    this.setState({ characters: shuffleImage(characters) })\n  }\n\n\n  render() {\n    return (    \n      <Wrapper>\n         <Title \n            score={this.state.score}\n            message={this.state.message}\n            topScore={this.state.topScore} />\n        <div class=\"container\"> \n          <div class=\"row\">\n            {this.state.characters.map(character => (\n              <CharacterCard\n                id={character.id}\n                key={character.id}\n                name={character.name}\n                image={character.image}\n                clickedImage={this.clickedImage}\n                />\n            ))}\n            </div>\n        </div>\n      </Wrapper>\n    ); \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}